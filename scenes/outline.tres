[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 outline_color : hint_color;
uniform bool skip_top;
uniform bool skip_bottom;

uniform vec4 flash_color : hint_color = vec4(1.0);
uniform float flash_intensity : hint_range(0.0, 1.0) = 0.0;

void fragment() {
    // Outline.
    float size_x = 1.0 / float(textureSize(TEXTURE, 0).x);
    float size_y = 1.0 / float(textureSize(TEXTURE, 0).y);
    vec4 sprite_color = texture(TEXTURE, UV);
    float alphascale = -4.0;
    if (skip_top) {
        alphascale += 1.0;
    }
    if (skip_bottom) {
        alphascale += 1.0;
    }
    float alpha = alphascale * sprite_color.a;
    alpha += texture(TEXTURE, UV + vec2(size_x, 0)).a;
    alpha += texture(TEXTURE, UV + vec2(-size_x, 0)).a;
    if (!skip_top) {
        alpha += texture(TEXTURE, UV + vec2(0, size_y)).a;
    }
    if (!skip_bottom) {
        alpha += texture(TEXTURE, UV + vec2(0, -size_y)).a;
    }
    
    // Flash.
    vec4 mixed_color = mix(sprite_color, outline_color, clamp(alpha, 0.0, 1.0));
    vec4 full_color = vec4(mixed_color.rgb, clamp(abs(alpha) + sprite_color.a, 0.0, 1.0));
    full_color.rgb = mix(full_color.rgb, flash_color.rgb, flash_intensity);
    COLOR = full_color;
}"

[resource]
shader = SubResource( 1 )
shader_param/outline_color = Color( 1, 1, 1, 1 )
shader_param/skip_top = false
shader_param/skip_bottom = false
shader_param/flash_color = Color( 1, 1, 1, 1 )
shader_param/flash_intensity = 0.0
